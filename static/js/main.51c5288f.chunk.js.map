{"version":3,"sources":["components/Auth/Auth.module.css","components/Navbar.jsx","components/Auth/components/RegisterUser.jsx","components/Auth/components/Login.jsx","components/Auth/components/Activation.jsx","components/Auth/components/ResendActivation.jsx","components/Auth/components/ResetPassword.jsx","components/Auth/components/ResetPasswordConfirm.jsx","components/Auth/Auth.jsx","components/Article/Article.jsx","components/StartGame/StartGame.jsx","App.jsx","index.js"],"names":["module","exports","NavMenu","React","useState","anchorEl","setAnchorEl","isLogin","useContext","Logined","open","Boolean","id","undefined","Container","to","Button","variant","style","aria-describedby","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","RegisterUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","emailHelperText","setEmailHelperText","passwordHelperText","setPasswordHelperText","formSend","setFormSend","Typography","noValidate","className","classes","h1","TextField","label","input","required","onChange","target","value","error","helperText","type","Grid","container","direction","justify","alignItems","grid","buttonW100","length","_json","console","log","fetch","window","protocol","backend","method","headers","body","then","response","a","status","text","localStorage","setItem","JSON","parse","Login","getItem","rememberPassword","setRememberPassword","FormControlLabel","control","Checkbox","name","color","checked","token","non_field_errors","Activation","props","result","setResult","renderCount","useRef","match","params","uid","useEffect","current","json","data","str","detail","catch","ResendActivation","ResetPassword","ResetPasswordConfirm","newPassword","setNewPassword","newPassword2","setNewPassword2","newPasswordError","setNewPasswordError","newPasswordHelperText","setNewPasswordHelperText","new_password","Auth","path","exact","component","Article","title","setTitle","content","setContent","location","pathname","history","replaceState","uri","split","decodeURI","dangerouslySetInnerHTML","__html","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","StartGame","setValue","age","state","setState","item","xs","Paper","Box","display","FormControl","RadioGroup","aria-label","Radio","InputLabel","Select","native","labelId","createContext","host","frontend","App","isLogined","StylesProvider","injectFirst","href","Provider","ReactDOM","render","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,GAAK,iBAAiB,MAAQ,oBAAoB,WAAa,yBAAyB,KAAO,qB,sICcxIC,EAAU,WACnB,MAAgCC,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAGMC,EAAUC,qBAAWC,GAWrBC,EAAOC,QAAQN,GACfO,EAAKF,EAAO,sBAAmBG,EAGrC,OACA,eAACC,EAAA,EAAD,WACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAO,CAAC,OAAU,QAA9C,wFAEJ,cAAC,IAAD,CAAMH,GAAG,2CAAT,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAO,CAAC,OAAU,QAA9C,oDAEAX,EACI,qCACI,cAACS,EAAA,EAAD,CAAQG,mBAAkBP,EAAIK,QAAQ,YAAYC,MAAO,CAAC,OAAU,QAASE,QApBzE,SAACC,GACjBf,EAAYe,EAAMC,gBAmBN,8DAGA,cAACC,EAAA,EAAD,CACIX,GAAIA,EACJF,KAAMA,EACNL,SAAUA,EACVmB,QAxBA,WACflB,EAAY,OAwBGmB,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/CC,gBAAiB,CAACF,SAAU,MAAOC,WAAY,UANnD,SAQI,cAAC,IAAD,CAAMZ,GAAG,kBAAT,SACI,cAACc,EAAA,EAAD,oDAIZ,qCACI,cAAC,IAAD,CAAMd,GAAG,iBAAiBG,MAAO,CAAC,MAAS,SAA3C,SACI,cAACF,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAO,CAAC,OAAU,QAA9C,kFAIJ,cAAC,IAAD,CAAMH,GAAG,iBAAiBG,MAAO,CAAC,MAAS,SAA3C,SACI,cAACF,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAO,CAAC,OAAU,QAA9C,yF,4EC9DXY,EAAe,WACxB,MAA0B3B,IAAMC,SAAS,IAAzC,mBAAO2B,EAAP,KAAcC,EAAd,KACA,EAAgC7B,IAAMC,SAAS,IAA/C,mBAAO6B,EAAP,KAAiBC,EAAjB,KAEA,EAAoC/B,IAAMC,SAAS,MAAnD,mBAAO+B,EAAP,KAAmBC,EAAnB,KACA,EAA0CjC,IAAMC,SAAS,MAAzD,mBAAOiC,EAAP,KAAsBC,EAAtB,KACA,EAA8CnC,IAAMC,SAAS,MAA7D,mBAAOmC,EAAP,KAAwBC,EAAxB,KACA,EAAoDrC,IAAMC,SAAS,MAAnE,mBAAOqC,EAAP,KAA2BC,EAA3B,KAEA,EAAgCvC,IAAMC,UAAS,GAA/C,mBAAOuC,EAAP,KAAiBC,EAAjB,KAoDA,OACI,mCACQD,EAEI,qCACI,cAACE,EAAA,EAAD,yIAGA,cAACA,EAAA,EAAD,6TAGA,eAACA,EAAA,EAAD,8HAC0B,cAAC,IAAD,CAAM9B,GAAG,gCAAT,iIAI9B,uBAAM+B,YAAU,EAAhB,UACI,cAACD,EAAA,EAAD,CAAY5B,QAAQ,KAAK8B,UAAWC,IAAQC,GAA5C,gFAIA,cAACC,EAAA,EAAD,CAAWC,MAAM,uCAAclC,QAAQ,WAAW8B,UAAWC,IAAQI,MAAOC,UAAQ,EAChFC,SAxEF,SAAAjC,GAClBW,EAASX,EAAMkC,OAAOC,QAwEFA,MAAOzB,EACP0B,MAAOtB,EACPuB,WAAYnB,IAGhB,cAACW,EAAA,EAAD,CAAWC,MAAM,uCAASlC,QAAQ,WAAW8B,UAAWC,IAAQI,MAAOO,KAAK,WAAWN,UAAQ,EAC3FC,SA3EC,SAAAjC,GACrBa,EAAYb,EAAMkC,OAAOC,QA2ELA,MAAOvB,EACPwB,MAAOpB,EACPqB,WAAYjB,IAGhB,cAACmB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,WAAWC,WAAW,SAASjB,UAAWC,IAAQiB,KAA1F,SACI,cAAC,IAAD,CAAMlD,GAAG,cAAT,yIAGJ,cAACC,EAAA,EAAD,CAAQ+B,UAAWC,IAAQkB,WAAYjD,QAAQ,YAAYG,QAjF5D,SAACC,GAChB,GAAIY,EAASkC,OAAS,EAAE,CACpB,IAAMC,EAAQ,aAAerC,EAAQ,iBAAmBA,EAAQ,iBAAmBE,EAAW,KAC9FoC,QAAQC,IAAIF,GACZG,MAAMC,OAAOC,SAAWD,OAAOE,QAAQ,mBAAoB,CACvDC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMT,IACPU,KAJH,uCAKI,WAAMC,GAAN,SAAAC,EAAA,kEACYD,EAASE,OADrB,SAEgBF,EAASG,OAFzB,6CACID,OADJ,KAEIJ,KAFJ,kDALJ,uDASEC,MACE,SAAAC,GAC4B,MAApBA,EAASE,QACTE,aAAaC,QAAQ,QAASC,KAAKC,MAAMP,EAASF,MAAM9C,OACxDa,GAAY,IACc,MAApBmC,EAASE,cACyBpE,IAApCwE,KAAKC,MAAMP,EAASF,MAAM9C,OAC1BS,EAAmB6C,KAAKC,MAAMP,EAASF,MAAM9C,OAC7CK,GAAc,KAEdI,EAAmB,IACnBJ,GAAc,SAEyBvB,IAAvCwE,KAAKC,MAAMP,EAASF,MAAM5C,UAC1BS,EAAsB2C,KAAKC,MAAMP,EAASF,MAAM5C,UAChDK,GAAiB,KAEjBI,EAAsB,IACtBJ,GAAiB,aAMjCI,EAAsB,6LACtBJ,GAAiB,IA2CL,gI,kBC5FXiD,EAAQ,WACjB,MAA0BpF,IAAMC,SAAS+E,aAAaK,QAAQ,UAA9D,mBAAOzD,EAAP,KAAcC,EAAd,KACA,EAAgC7B,IAAMC,SAAS+E,aAAaK,QAAQ,aAApE,mBAAOvD,EAAP,KAAiBC,EAAjB,KACA,EAAgD/B,IAAMC,UAAS,GAA/D,mBAAOqF,EAAP,KAAyBC,EAAzB,KAEA,EAA0CvF,IAAMC,SAAS,MAAzD,mBAAOiC,EAAP,KAAsBC,EAAtB,KACA,EAAoDnC,IAAMC,SAAS,MAAnE,mBAAOqC,EAAP,KAA2BC,EAA3B,KAEA,EAAgCvC,IAAMC,UAAS,GAA/C,mBAAOuC,EAAP,KAAiBC,EAAjB,KA8CD,OACI,mCACQD,EACI,cAACE,EAAA,EAAD,oGAGA,uBAAMC,YAAU,EAAhB,UACI,cAACD,EAAA,EAAD,CAAY5B,QAAQ,KAAK8B,UAAWC,IAAQC,GAA5C,gFAIA,cAACC,EAAA,EAAD,CAAWC,MAAM,uCAAclC,QAAQ,WAAW8B,UAAWC,IAAQI,MAAOC,UAAQ,EAChFC,SAxDD,SAAAjC,GAClBW,EAASX,EAAMkC,OAAOC,QAwDHA,MAAOzB,EACP0B,MAAOpB,IAGX,cAACa,EAAA,EAAD,CAAWC,MAAM,uCAASlC,QAAQ,WAAW8B,UAAWC,IAAQI,MAAOO,KAAK,WAAWN,UAAQ,EAC3FC,SA1DE,SAAAjC,GACrBa,EAAYb,EAAMkC,OAAOC,QA0DNA,MAAOvB,EACPwB,MAAOpB,EACPqB,WAAYjB,IAGhB,eAACmB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,SAASjB,UAAWC,IAAQiB,KAA/F,UACI,cAAC0B,EAAA,EAAD,CACGC,QACE,cAACC,EAAA,EAAD,CACEC,KAAK,UACLC,MAAM,UACNzC,SAlEE,SAAAjC,GAC5BqE,EAAoBrE,EAAMkC,OAAOyC,UAkEPA,QAASP,IAGbtC,MAAM,gGAET,cAAC,IAAD,CAAMpC,GAAG,uBAAT,0FAEJ,cAACC,EAAA,EAAD,CAAQ+B,UAAWC,IAAQkB,WAAYjD,QAAQ,YAAYG,QAtE3D,SAACC,GAChB,IAAM+C,EAAQ,aAAerC,EAAQ,iBAAmBA,EAAQ,iBAAmBE,EAAW,KAC9FoC,QAAQC,IAAIF,GACZG,MAAMC,OAAOC,SAAWD,OAAOE,QAAQ,kBAAmB,CACtDC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMT,IACPU,KAJH,uCAKI,WAAMC,GAAN,SAAAC,EAAA,kEACYD,EAASE,OADrB,SAEgBF,EAASG,OAFzB,6CACID,OADJ,KAEIJ,KAFJ,kDALJ,uDASEC,MAAK,SAAAC,GACHV,QAAQC,IAAIe,KAAKC,MAAMP,EAASF,MAAMoB,OACd,MAApBlB,EAASE,QACT3C,GAAiB,GACjBI,EAAsB,MACtByC,aAAaC,QAAQ,QAASC,KAAKC,MAAMP,EAASF,MAAMoB,OACxDd,aAAaC,QAAQ,QAASrD,GAC1B0D,GACAN,aAAaC,QAAQ,WAAYnD,GAErCW,GAAY,IACe,MAApBmC,EAASE,aACmCpE,IAA/CwE,KAAKC,MAAMP,EAASF,MAAMqB,mBAC1B5D,GAAiB,GACjBI,EAAsB2C,KAAKC,MAAMP,EAASF,MAAMqB,uBA4C7C,kDCrGVC,EAAa,SAACC,GACvB,MAA4BjG,IAAMC,SAAS,MAA3C,mBAAOiG,EAAP,KAAeC,EAAf,KACMC,EAAcC,iBAAO,GAErBpC,EAAQ,WAAagC,EAAMK,MAAMC,OAAOC,IAAM,cAAgBP,EAAMK,MAAMC,OAAOT,MAAQ,KAqC/F,OApCA5B,QAAQC,IAAKF,GAEbwC,qBAAU,WACNL,EAAYM,UACgB,IAAxBN,EAAYM,SAEZtC,MAAMC,OAAOC,SAAWD,OAAOE,QAAQ,8BAA+B,CAClEC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMT,IACPU,MAAK,SAAAC,GAAQ,OAAIA,EAAS+B,OACxBhC,MAAK,SAAAiC,GAAI,MAAK,CACX9B,OAAQF,EAASE,OACjB8B,KAAMA,MAERjC,MAAK,SAAAC,GACHV,QAAQC,IAAIS,EAASgC,MACrB,IAAIC,EAAM,kIACmBnG,IAAzBkE,EAASgC,KAAKE,SACdD,EAAMA,EAAM,IAAMjC,EAASgC,KAAKE,aAEVpG,IAAtBkE,EAASgC,KAAKJ,MACdK,EAAMA,EAAM,IAAMjC,EAASgC,KAAKJ,UAER9F,IAAxBkE,EAASgC,KAAKd,QACde,EAAMA,EAAM,IAAMjC,EAASgC,KAAKd,OAEpCK,EAAUU,SAEhBE,OACE,SAAAnC,GAAQ,OAAIuB,EAAU,0IAOlC,mCACI,cAACzD,EAAA,EAAD,UAAawD,OC3CRc,EAAmB,WAC5B,MAA0BhH,IAAMC,SAAS+E,aAAaK,QAAQ,UAA9D,mBAAOzD,EAAP,KAAcC,EAAd,KACA,EAAoC7B,IAAMC,UAAS,GAAnD,mBAAO+B,EAAP,KAAmBC,EAAnB,KACA,EAAgCjC,IAAMC,UAAS,GAA/C,mBAAOuC,EAAP,KAAiBC,EAAjB,KA6BA,OACI,mCACQD,EACI,cAACE,EAAA,EAAD,uKAGA,uBAAMC,YAAU,EAAhB,UACI,cAACD,EAAA,EAAD,CAAY5B,QAAQ,KAAK8B,UAAWC,IAAQC,GAA5C,yJAGA,cAACC,EAAA,EAAD,CACIC,MAAM,uCACNlC,QAAQ,WACR8B,UAAWC,IAAQI,MACnBI,MAAOzB,EACPuB,SA1CF,SAAAjC,GAClBW,EAASX,EAAMkC,OAAOC,QA0CFC,MAAOtB,IAEX,cAACnB,EAAA,EAAD,CAAQ+B,UAAWC,IAAQkB,WAAYjD,QAAQ,YAAYG,QAzC5D,SAACC,GAChB,IAAM+C,EAAQ,aAAerC,EAAQ,KACrCsC,QAAQC,IAAIF,GACZG,MAAMC,OAAOC,SAAWD,OAAOE,QAAQ,qCAAsC,CACzEC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMT,IACPU,KAJH,uCAKI,WAAMC,GAAN,SAAAC,EAAA,kEACYD,EAASE,OADrB,SAEgBF,EAASG,OAFzB,6CACID,OADJ,KAEIJ,KAFJ,kDALJ,uDASEC,MACE,SAAAC,GAC4B,MAApBA,EAASE,OACTrC,GAAY,GACc,MAApBmC,EAASE,QACf7C,GAAc,OAwBV,0EClDXgF,EAAgB,WACzB,MAA0BjH,IAAMC,SAAS+E,aAAaK,QAAQ,UAA9D,mBAAOzD,EAAP,KAAcC,EAAd,KACA,EAAoC7B,IAAMC,UAAS,GAAnD,mBAAO+B,EAAP,KAAmBC,EAAnB,KACA,EAAgCjC,IAAMC,UAAS,GAA/C,mBAAOuC,EAAP,KAAiBC,EAAjB,KA6BA,OACI,mCACQD,EACI,cAACE,EAAA,EAAD,uKAGA,uBAAMC,YAAU,EAAhB,UACI,cAACD,EAAA,EAAD,CAAY5B,QAAQ,KAAK8B,UAAWC,IAAQC,GAA5C,iFAGA,cAACC,EAAA,EAAD,CACIC,MAAM,uCACNlC,QAAQ,WACR8B,UAAWC,IAAQI,MACnBI,MAAOzB,EACPuB,SA1CF,SAAAjC,GAClBW,EAASX,EAAMkC,OAAOC,QA0CFC,MAAOtB,IAEX,cAACnB,EAAA,EAAD,CAAQ+B,UAAWC,IAAQkB,WAAYjD,QAAQ,YAAYG,QAzC5D,SAACC,GAChB,IAAM+C,EAAQ,aAAerC,EAAQ,KACrCsC,QAAQC,IAAIF,GACZG,MAAMC,OAAOC,SAAWD,OAAOE,QAAQ,kCAAmC,CACtEC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMT,IACPU,KAJH,uCAKI,WAAMC,GAAN,SAAAC,EAAA,kEACYD,EAASE,OADrB,SAEgBF,EAASG,OAFzB,6CACID,OADJ,KAEIJ,KAFJ,kDALJ,uDASEC,MACE,SAAAC,GAC4B,MAApBA,EAASE,OACTrC,GAAY,GACc,MAApBmC,EAASE,QACf7C,GAAc,OAwBV,0ECjDXiF,EAAuB,SAACjB,GACjC,MAAgCjG,IAAMC,UAAS,GAA/C,mBAAOuC,EAAP,KAAiBC,EAAjB,KACA,EAAsCzC,IAAMC,SAAS,MAArD,mBAAOkH,EAAP,KAAoBC,EAApB,KACA,EAAwCpH,IAAMC,SAAS,MAAvD,mBAAOoH,EAAP,KAAqBC,EAArB,KACA,EAAgDtH,IAAMC,SAAS,MAA/D,mBAAOsH,EAAP,KAAyBC,EAAzB,KACA,EAA0DxH,IAAMC,SAAS,MAAzE,mBAAOwH,EAAP,KAA8BC,EAA9B,KAsDA,OACI,mCACQlF,EACI,cAACE,EAAA,EAAD,yIAGA,uBAAMC,YAAU,EAAhB,UACI,cAACD,EAAA,EAAD,CAAY5B,QAAQ,KAAK8B,UAAWC,IAAQC,GAA5C,8IAGA,cAACC,EAAA,EAAD,CACIC,MAAM,iHACNlC,QAAQ,WACR8B,UAAWC,IAAQI,MACnBI,MAAO8D,EACPhE,SAnEI,SAAAjC,GACxBkG,EAAelG,EAAMkC,OAAOC,QAmERC,MAAOiE,IAEX,cAACxE,EAAA,EAAD,CACIC,MAAM,6HACNlC,QAAQ,WACR8B,UAAWC,IAAQI,MACnBI,MAAOgE,EACPlE,SAvEK,SAAAjC,GACzBoG,EAAgBpG,EAAMkC,OAAOC,QAuETC,MAAOiE,EACPhE,WAAYkE,IAEhB,cAAC5G,EAAA,EAAD,CAAQ+B,UAAWC,IAAQkB,WAAYjD,QAAQ,YAAYG,QAvE5D,SAACC,GAChB,IAAM+C,EAAQ,WAAagC,EAAMK,MAAMC,OAAOC,IAAM,cAAgBP,EAAMK,MAAMC,OAAOT,MAAQ,qBAAuBqB,EAAc,KAEhIA,IAAgBE,EACZF,EAAYnD,OAAS,GACrB0D,EAAyB,IACzBF,GAAoB,GACpBpD,MAAMC,OAAOC,SAAWD,OAAOE,QAAQ,0CAA2C,CAC9EC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMT,IACPU,KAJH,uCAKI,WAAMC,GAAN,SAAAC,EAAA,kEACYD,EAASE,OADrB,SAEgBF,EAASG,OAFzB,6CACID,OADJ,KAEIJ,KAFJ,kDALJ,uDASEC,MACE,SAAAC,GAC4B,MAApBA,EAASE,OACRrC,GAAY,GACc,MAApBmC,EAASE,SACZI,KAAKC,MAAMP,EAASF,MAAM8B,KAC1BkB,EAAyBxC,KAAKC,MAAMP,EAASF,MAAM8B,KAEnDtB,KAAKC,MAAMP,EAASF,MAAMoB,OAC1B4B,EAAyBxC,KAAKC,MAAMP,EAASF,MAAMoB,OAEnDZ,KAAKC,MAAMP,EAASF,MAAMiD,cAC1BD,EAAyBxC,KAAKC,MAAMP,EAASF,MAAMiD,cAEvDH,GAAoB,SAKhCE,EAAyB,6LACzBF,GAAoB,KAGxBE,EAAyB,6EACzBF,GAAoB,KA+BR,0ECjFXI,EAAO,SAAC3B,GACnB,OACI,qBAAKrD,UAAWC,IAAQa,UAAxB,SACI,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOmE,KAAK,iBAAiBC,OAAK,EAAEC,UAAWpG,IAG/C,cAAC,IAAD,CAAOkG,KAAK,mCAAmCE,UAAWf,IAG1D,cAAC,IAAD,CAAOa,KAAK,wCAAwCE,UAAW/B,IAG/D,cAAC,IAAD,CAAO6B,KAAK,iBAAiBE,UAAW3C,IAGxC,cAAC,IAAD,CAAOyC,KAAK,0BAA0BE,UAAWd,IAGjD,cAAC,IAAD,CAAOY,KAAK,oDAAoDE,UAAWb,UC5B1Ec,EAAU,WACnB,MAA0BhI,IAAMC,SAAS,IAAzC,mBAAOgI,EAAP,KAAcC,EAAd,KACA,EAA8BlI,IAAMC,SAAS,IAA7C,mBAAOkI,EAAP,KAAgBC,EAAhB,KA6BF,MA3BmC,MAA7B/D,OAAOgE,SAASC,UAChBjE,OAAOkE,QAAQC,aAAa,KAAK,KAAK,QAG1C/B,qBAAU,WACN,IAAMgC,EAAMpE,OAAOgE,SAASC,SAASI,MAAM,KACrCzE,EAAQ,aAAewE,EAAI,GAAK,gBAAiBE,UAAUF,EAAI,IAAM,KAE3EvE,QAAQC,IAAIF,GAEZG,MAAMC,OAAOC,SAAWD,OAAOE,QAAQ,gBAAiB,CACpDC,OAAQ,OACRE,KAAMT,IACPU,KAHH,uCAII,WAAMC,GAAN,SAAAC,EAAA,kEACYD,EAASE,OADrB,SAEgBF,EAASG,OAFzB,6CACID,OADJ,KAEIJ,KAFJ,kDAJJ,uDAQEC,MAAK,SAAAC,GACqB,MAApBA,EAASE,SACToD,EAAShD,KAAKC,MAAMP,EAASF,MAAMuD,OACnCG,EAAWlD,KAAKC,MAAMP,EAASF,MAAMyD,eAG9C,IAIH,qCACE,6BAAKF,IACL,qBAAKW,wBAAyB,CAAEC,OAAQV,S,wFCxBxCW,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,KAEZC,YAAa,CACXC,UAAWN,EAAMG,QAAQ,QAIhBI,EAAY,WACrB,IAAM1G,EAAUiG,IAEhB,EAA0B9I,IAAMC,SAAS,YAAzC,mBAAOoD,EAAP,KAAcmG,EAAd,KACA,EAA0BxJ,IAAMC,SAAS,CACrCwJ,IAAK,GACL9D,KAAM,QAFV,mBAAO+D,EAAP,KAAcC,EAAd,KAsBF,OACE,mCACA,eAAClG,EAAA,EAAD,CAAMC,WAAS,EAACyF,QAAS,EAAGpI,MAAO,CAAC,WAAc,QAAlD,UACI,cAAC0C,EAAA,EAAD,CAAMmG,MAAI,EAACC,GAAI,EAAf,SACI,eAACC,EAAA,EAAD,CAAO/I,MAAO,CAAC,UAAY,QAAS,QAAU,QAA9C,UACI,mBAAGA,MAAO,CAAC,UAAY,UAAvB,gHACA,eAACgJ,EAAA,EAAD,CAAKC,QAAQ,OAAOjJ,MAAO,CAAC,cAAiB,UAA7C,UACI,cAACkJ,EAAA,EAAD,CAAalC,UAAU,WAAWhH,MAAO,CAAC,MAAQ,QAAlD,SACE,eAACmJ,EAAA,EAAD,CAAYC,aAAW,SAASxE,KAAK,gBAAgBtC,MAAOA,EAAOF,SAzBhE,SAACjC,GAClBsI,EAAStI,EAAMkC,OAAOC,QAwBR,UACE,cAACmC,EAAA,EAAD,CAAkBnC,MAAM,WAAWoC,QAAS,cAAC2E,EAAA,EAAD,IAAWpH,MAAM,oCAC7D,cAACwC,EAAA,EAAD,CAAkBnC,MAAM,SAASoC,QAAS,cAAC2E,EAAA,EAAD,IAAWpH,MAAM,+CAC3D,cAACwC,EAAA,EAAD,CAAkBnC,MAAM,QAAQoC,QAAS,cAAC2E,EAAA,EAAD,IAAWpH,MAAM,2DAC1D,cAACwC,EAAA,EAAD,CAAkBnC,MAAM,eAAeoC,QAAS,cAAC2E,EAAA,EAAD,IAAWpH,MAAM,gGACjE,cAACwC,EAAA,EAAD,CAAkBnC,MAAM,UAAUoC,QAAS,cAAC2E,EAAA,EAAD,IAAWpH,MAAM,uEAC5D,cAACwC,EAAA,EAAD,CAAkBnC,MAAM,MAAMoC,QAAS,cAAC2E,EAAA,EAAD,IAAWpH,MAAM,8CAG5D,eAACiH,EAAA,EAAD,CAAanJ,QAAQ,WAAWC,MAAO,CAAC,OAAS,QAAS6B,UAAWC,EAAQoG,YAA7E,UACI,cAACoB,EAAA,EAAD,CAAY5J,GAAG,2BAAf,qEACA,eAAC6J,EAAA,EAAD,CAAQC,QAAM,EACVC,QAAQ,2BACR/J,GAAG,qBACHuC,MAAM,0DAEFK,MAAOqG,EAAMD,IACjBtG,SAtCF,SAACjC,GACnB,IAAMyE,EAAOzE,EAAMkC,OAAOuC,KAC1BgE,EAAS,2BACFD,GADC,kBAEP/D,EAAOzE,EAAMkC,OAAOC,UA4BL,UAQI,wBAAQ8G,aAAW,OAAO9G,MAAM,KAClC,wBAAQA,MAAM,SAAd,4CACA,wBAAQA,MAAM,QAAd,4CACA,wBAAQA,MAAM,QAAd,wDAGN,cAACxC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAO,CAAC,OAAU,SAAU,UAAY,UAApE,gEAIZ,cAAC0C,EAAA,EAAD,CAAMmG,MAAI,EAACC,GAAI,EAAG9I,MAAO,CAAC,UAAY,UAAtC,SACI,eAAC+I,EAAA,EAAD,CAAO/I,MAAO,CAAC,UAAY,QAAS,QAAU,QAA9C,UACI,+IACA,qBAAKA,MAAO,CAAC,OAAU,SAAU,QAAU,SAAS,OAAS,aAA7D,0MAGA,qBAAKA,MAAO,CAAC,OAAU,SAAU,QAAU,SAAU,OAAS,aAA9D,2N,SClFHT,EAAUN,IAAMyK,gBAEF,oBAAvBpG,OAAOgE,SAASqC,MAChBrG,OAAOE,QAAUF,OAAOsG,SAAW,kBACnCtG,OAAOC,SAAW,aAElBD,OAAOE,QAAU,iBACjBF,OAAOsG,SAAW,iBAClBtG,OAAOC,SAAW,WAGf,IAAMsG,EAAM,WACf,MAAkC3K,oBAAS,GAA3C,mBAAO4K,EAAP,UACA,OACE,eAACC,EAAA,EAAD,CAAgBC,aAAW,EAA3B,UACE,sBAAMC,KAAM3G,OAAOC,SAAWD,OAAOsG,WACrC,cAAC,IAAD,UACE,eAACrK,EAAQ2K,SAAT,CAAkB5H,MAAOwH,EAAzB,UACE,cAAC,EAAD,IACA,cAAClK,EAAA,EAAD,UACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOkH,KAAK,WAAWE,UAAWH,IAClC,cAAC,IAAD,CAAOC,KAAK,2CAAaE,UAAWwB,IACpC,cAAC,IAAD,CAAO1B,KAAK,IAAIE,UAAWC,kBC5B7CkD,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.51c5288f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__3e8JN\",\"h1\":\"Auth_h1__2TQm4\",\"input\":\"Auth_input__2ysYl\",\"buttonW100\":\"Auth_buttonW100__11L92\",\"grid\":\"Auth_grid__grWyv\"};","import React, {useContext} from 'react';\nimport {\n    Container,\n    Popover,\n    Button,\n    MenuItem\n} from '@material-ui/core';\n\n//import MenuIcon from '@material-ui/icons/Menu';\n//import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {Link} from \"react-router-dom\";\n\nimport {Logined} from '../App'\n\n\nexport const NavMenu = () => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n//    const [isLoginen, setIsLogin] = React.useState(false)\n\n    const isLogin = useContext(Logined)\n    //let Login = false\n    //if (localStorage.getItem('token')!==null) Login = true\n    //if (Login !== isLogin) setIsLogin(Login)\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n         setAnchorEl(null);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    //if (useMediaQuery('(min-width:1024px)')){\n    return (\n    <Container>\n        <Link to=\"/\">\n            <Button variant=\"contained\" style={{\"margin\": \"10px\"}}>Документация</Button>\n        </Link>\n        <Link to=\"/ru/играть\">\n            <Button variant=\"contained\" style={{\"margin\": \"10px\"}}>Играть</Button>\n        </Link>\n        {   isLogin\n            ?   <>\n                    <Button aria-describedby={id} variant=\"contained\" style={{\"margin\": \"10px\"}} onClick={handleClick}>\n                        Юзернейм\n                    </Button>\n                    <Popover\n                        id={id}\n                        open={open}\n                        anchorEl={anchorEl}\n                        onClose={handleClose}\n                        anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n                        transformOrigin={{vertical: 'top', horizontal: 'center'}}\n                    >\n                        <Link to=\"/ru/auth/logout\">\n                            <MenuItem>Выход</MenuItem>\n                        </Link>\n                    </Popover>\n                </>\n            :   <>\n                    <Link to=\"/ru/auth/users\" style={{\"float\": \"right\"}}>\n                        <Button variant=\"contained\" style={{\"margin\": \"10px\"}}>\n                            Регистрация\n                        </Button>\n                    </Link>\n                    <Link to=\"/ru/auth/login\" style={{\"float\": \"right\"}}>\n                        <Button variant=\"contained\" style={{\"margin\": \"10px\"}}>\n                            Авторизация\n                        </Button>\n                    </Link>\n                </>\n        }\n    </Container>\n    )\n    // }else{\n    //     return (\n    //       <AppBar>\n    //         <Toolbar>\n    //         <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n    //            <MenuIcon />\n    //         </IconButton>\n    //         </Toolbar>\n    //       </AppBar>\n    //     )\n    //}\n}\n\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Typography, TextField, Grid, Button} from '@material-ui/core';\nimport classes from '../Auth.module.css'\n\nexport const RegisterUser = () => {\n    const [email, setEmail] = React.useState('')\n    const [password, setPassword] = React.useState('')\n\n    const [emailError, setEmailError] = React.useState(null)\n    const [passwordError, setPasswordError] = React.useState(null)\n    const [emailHelperText, setEmailHelperText] = React.useState(null)\n    const [passwordHelperText, setPasswordHelperText] = React.useState(null)\n\n    const [formSend, setFormSend] = React.useState(false)\n\n    const onChangeEmail = event => {\n        setEmail(event.target.value)\n    }\n\n    const onChangePassword = event => {\n        setPassword(event.target.value)\n    }\n\n    const FormSubmit = (event) => {\n        if (password.length > 5){\n            const _json = '{\"email\":\"' + email + '\",\"username\":\"' + email + '\",\"password\":\"' + password + '\"}'\n            console.log(_json)\n            fetch(window.protocol + window.backend+'/api/auth/users/', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: _json\n            }).then(\n                async response => ({\n                    status: response.status,\n                    body: await response.text(),\n                })\n            ).then(\n                response=>{\n                    if (response.status === 201) {\n                        localStorage.setItem('email', JSON.parse(response.body).email)\n                        setFormSend(true)\n                    }else if (response.status === 400){\n                        if (JSON.parse(response.body).email !== undefined){\n                            setEmailHelperText(JSON.parse(response.body).email)\n                            setEmailError(true)\n                        }else{\n                            setEmailHelperText('')\n                            setEmailError(false)\n                        }\n                        if (JSON.parse(response.body).password !== undefined){\n                            setPasswordHelperText(JSON.parse(response.body).password)\n                            setPasswordError(true)\n                        }else{\n                            setPasswordHelperText('')\n                            setPasswordError(false)\n                        }\n                    }\n                }\n            )\n        }else{\n            setPasswordHelperText('Минимальная длина пароля 6 символов')\n            setPasswordError(true)\n        }\n    }\n\n    return (\n        <>\n            {   formSend\n                ?(\n                    <>\n                        <Typography>\n                            Вы зарегистрировались.\n                        </Typography>\n                        <Typography>\n                            Для авторизации подтвердите Ваш емайл, письмо отправлено.\n                        </Typography>\n                        <Typography>\n                            Если письмо не пришло <Link to=\"/auth/users/resend_activation\">повторите активацию</Link>\n                        </Typography>\n                    </>\n                ):(\n                    <form noValidate>\n                        <Typography variant=\"h1\" className={classes.h1}>\n                           Регистрация\n                        </Typography>\n\n                        <TextField label=\"Email адрес\" variant=\"outlined\" className={classes.input} required\n                            onChange={onChangeEmail}\n                            value={email}\n                            error={emailError}\n                            helperText={emailHelperText}\n                        />\n\n                        <TextField label=\"Пароль\" variant=\"outlined\" className={classes.input} type=\"password\" required\n                            onChange={onChangePassword}\n                            value={password}\n                            error={passwordError}\n                            helperText={passwordHelperText}\n                        />\n\n                        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" className={classes.grid}>\n                            <Link to=\"/aunf/login\">Уже зарегистрированны</Link>\n                        </Grid>\n\n                        <Button className={classes.buttonW100} variant=\"contained\" onClick={FormSubmit}>Зарегистрироваться</Button>\n                    </form>\n                )\n            }\n       </>\n    )\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {\n    Typography,\n    TextField,\n    FormControlLabel,\n    Grid,\n    Button,\n    Checkbox\n} from '@material-ui/core';\nimport classes from '../Auth.module.css'\n\n\nexport const Login = () => {\n    const [email, setEmail] = React.useState(localStorage.getItem('email'))\n    const [password, setPassword] = React.useState(localStorage.getItem('password'))\n    const [rememberPassword, setRememberPassword] = React.useState(false)\n\n    const [passwordError, setPasswordError] = React.useState(null)\n    const [passwordHelperText, setPasswordHelperText] = React.useState(null)\n\n    const [formSend, setFormSend] = React.useState(false)\n\n    const onChangeEmail = event => {\n        setEmail(event.target.value)\n    }\n\n    const onChangePassword = event => {\n        setPassword(event.target.value)\n    }\n\n   const onChangeRememberPassword = event => {\n        setRememberPassword(event.target.checked)\n    }\n\n    const FormSubmit = (event) => {\n        const _json = '{\"email\":\"' + email + '\",\"username\":\"' + email + '\",\"password\":\"' + password + '\"}'\n        console.log(_json)\n        fetch(window.protocol + window.backend+'/api/auth/token', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: _json\n        }).then(\n            async response => ({\n                status: response.status,\n                body: await response.text(),\n            })\n        ).then(response => {\n            console.log(JSON.parse(response.body).token)\n            if (response.status === 200){\n                setPasswordError(false)\n                setPasswordHelperText(null)\n                localStorage.setItem('token', JSON.parse(response.body).token)\n                localStorage.setItem('email', email)\n                if (rememberPassword) {\n                    localStorage.setItem('password', password)\n                }\n                setFormSend(true)\n            } else if (response.status === 400){\n                if (JSON.parse(response.body).non_field_errors !== undefined) {\n                    setPasswordError(true)\n                    setPasswordHelperText(JSON.parse(response.body).non_field_errors)\n                }\n            }\n        })\n    }\n\n   return (\n       <>\n           {   formSend\n               ?   <Typography>\n                       Вы залогинились\n                   </Typography>\n               :   <form noValidate>\n                       <Typography variant=\"h1\" className={classes.h1}>\n                          Авторизация\n                       </Typography>\n\n                       <TextField label=\"Email адрес\" variant=\"outlined\" className={classes.input} required\n                           onChange={onChangeEmail}\n                           value={email}\n                           error={passwordError}\n                       />\n\n                       <TextField label=\"Пароль\" variant=\"outlined\" className={classes.input} type=\"password\" required\n                           onChange={onChangePassword}\n                           value={password}\n                           error={passwordError}\n                           helperText={passwordHelperText}\n                       />\n\n                       <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" className={classes.grid}>\n                           <FormControlLabel\n                              control={\n                                <Checkbox\n                                  name=\"checked\"\n                                  color=\"primary\"\n                                  onChange={onChangeRememberPassword}\n                                  checked={rememberPassword}\n                                />\n                              }\n                              label=\"Запомнить пароль\"\n                           />\n                           <Link to=\"/auth/reset_password\">Забыли пароль</Link>\n                       </Grid>\n                       <Button className={classes.buttonW100} variant=\"contained\" onClick={FormSubmit} >Войти</Button>\n                   </form>\n           }\n       </>\n   )\n}\n","import React, {useEffect, useRef} from \"react\";\nimport {Typography} from \"@material-ui/core\";\n\n\nexport const Activation = (props) => {\n    const [result, setResult] = React.useState(null)\n    const renderCount = useRef(1)\n\n    const _json = '{\"uid\":\"' + props.match.params.uid + '\",\"token\":\"' + props.match.params.token + '\"}'\n    console.log (_json)\n\n    useEffect(() => {\n        renderCount.current++\n        if (renderCount.current === 2){\n\n            fetch(window.protocol + window.backend+'/api/auth/users/activation/', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: _json\n            }).then(response => response.json()\n                .then(data => ({\n                    status: response.status,\n                    data: data,\n                    })\n                ).then(response => {\n                    console.log(response.data)\n                    let str = 'Ошибка подтверждения email.'\n                    if (response.data.detail !== undefined) {\n                        str = str + ' ' + response.data.detail\n                    }\n                    if (response.data.uid !== undefined) {\n                        str = str + ' ' + response.data.uid\n                    }\n                    if (response.data.token !== undefined) {\n                        str = str + ' ' + response.data.token\n                    }\n                    setResult(str)\n                })\n            ).catch(\n                response => setResult('Вы успешно подтвердили email')\n            )\n\n        }\n    })\n\n    return (\n    <>\n        <Typography>{result}</Typography>\n    </>\n    )\n}\n\n","import React from 'react';\nimport {Button, TextField, Typography} from \"@material-ui/core\";\nimport classes from \"../Auth.module.css\";\n\nexport const ResendActivation = () => {\n    const [email, setEmail] = React.useState(localStorage.getItem('email'))\n    const [emailError, setEmailError] = React.useState(false)\n    const [formSend, setFormSend] = React.useState(false)\n\n    const onChangeEmail = event => {\n        setEmail(event.target.value)\n    }\n\n    const FormSubmit = (event) => {\n        const _json = '{\"email\":\"' + email + '\"}'\n        console.log(_json)\n        fetch(window.protocol + window.backend+'/api/auth/users/resend_activation/', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: _json\n        }).then(\n            async response => ({\n                status: response.status,\n                body: await response.text(),\n            })\n        ).then(\n            response=>{\n                if (response.status === 204) {\n                    setFormSend(true)\n                }else if (response.status === 400){\n                    setEmailError(true)\n                }\n            }\n        )\n    }\n\n    return (\n        <>\n            {   formSend\n                ?   <Typography>\n                        Повторное письмо отправлено\n                    </Typography>\n                :   <form noValidate>\n                        <Typography variant=\"h1\" className={classes.h1}>\n                            Повторное подтверждение Email\n                        </Typography>\n                        <TextField\n                            label=\"Email адрес\"\n                            variant=\"outlined\"\n                            className={classes.input}\n                            value={email}\n                            onChange={onChangeEmail}\n                            error={emailError}\n                        />\n                        <Button className={classes.buttonW100} variant=\"contained\" onClick={FormSubmit}>\n                            Отправить\n                        </Button>\n                    </form>\n            }\n        </>\n    )\n}","import React from 'react';\nimport {Button, TextField, Typography} from \"@material-ui/core\";\nimport classes from \"../Auth.module.css\";\n\nexport const ResetPassword = () => {\n    const [email, setEmail] = React.useState(localStorage.getItem('email'))\n    const [emailError, setEmailError] = React.useState(false)\n    const [formSend, setFormSend] = React.useState(false)\n\n    const onChangeEmail = event => {\n        setEmail(event.target.value)\n    }\n\n    const FormSubmit = (event) => {\n        const _json = '{\"email\":\"' + email + '\"}'\n        console.log(_json)\n        fetch(window.protocol + window.backend+'/api/auth/users/reset_password/', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: _json\n        }).then(\n            async response => ({\n                status: response.status,\n                body: await response.text(),\n            })\n        ).then(\n            response=>{\n                if (response.status === 204) {\n                    setFormSend(true)\n                }else if (response.status === 400){\n                    setEmailError(true)\n                }\n            }\n        )\n    }\n\n    return (\n        <>\n            {   formSend\n                ?   <Typography>\n                        Повторное письмо отправлено\n                    </Typography>\n                :   <form noValidate>\n                        <Typography variant=\"h1\" className={classes.h1}>\n                            Сброс пароля\n                        </Typography>\n                        <TextField\n                            label=\"Email адрес\"\n                            variant=\"outlined\"\n                            className={classes.input}\n                            value={email}\n                            onChange={onChangeEmail}\n                            error={emailError}\n                        />\n                        <Button className={classes.buttonW100} variant=\"contained\" onClick={FormSubmit}>\n                            Отправить\n                        </Button>\n                    </form>\n            }\n        </>\n  )\n}","import React from \"react\";\nimport {Button, TextField, Typography} from \"@material-ui/core\";\nimport classes from \"../Auth.module.css\";\n\n\nexport const ResetPasswordConfirm = (props) => {\n    const [formSend, setFormSend] = React.useState(false)\n    const [newPassword, setNewPassword] = React.useState(null)\n    const [newPassword2, setNewPassword2] = React.useState(null)\n    const [newPasswordError, setNewPasswordError] = React.useState(null)\n    const [newPasswordHelperText, setNewPasswordHelperText] = React.useState(null)\n\n    const onChangeNewPassword = event => {\n        setNewPassword(event.target.value)\n    }\n\n    const onChangeNewPassword2 = event => {\n        setNewPassword2(event.target.value)\n    }\n\n    const FormSubmit = (event) => {\n        const _json = '{\"uid\":\"' + props.match.params.uid + '\",\"token\":\"' + props.match.params.token + '\",\"new_password\":\"' + newPassword + '\"}'\n\n        if (newPassword === newPassword2){\n            if (newPassword.length > 5){\n                setNewPasswordHelperText('')\n                setNewPasswordError(false)\n                fetch(window.protocol + window.backend+'/api/auth/users/reset_password_confirm/', {\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json'},\n                    body: _json\n                }).then(\n                    async response => ({\n                        status: response.status,\n                        body: await response.text(),\n                    })\n                ).then(\n                    response=>{\n                        if (response.status === 204) {\n                             setFormSend(true)\n                        } else if (response.status === 400){\n                            if (JSON.parse(response.body).uid){\n                                setNewPasswordHelperText(JSON.parse(response.body).uid)\n                            }\n                            if (JSON.parse(response.body).token){\n                                setNewPasswordHelperText(JSON.parse(response.body).token)\n                            }\n                            if (JSON.parse(response.body).new_password){\n                                setNewPasswordHelperText(JSON.parse(response.body).new_password)\n                            }\n                            setNewPasswordError(true)\n                        }\n                    }\n                )\n            }else{\n                setNewPasswordHelperText('Минимальная длина пароля 6 символов')\n                setNewPasswordError(true)\n            }\n        }else{\n            setNewPasswordHelperText('Пароли разные')\n            setNewPasswordError(true)\n        }\n    }\n\n    return (\n        <>\n            {   formSend\n                ?   <Typography>\n                        Пароль успешно изменён\n                    </Typography>\n                :   <form noValidate>\n                        <Typography variant=\"h1\" className={classes.h1}>\n                            Установите новый пароль\n                        </Typography>\n                        <TextField\n                            label=\"Введите новый пароль\"\n                            variant=\"outlined\"\n                            className={classes.input}\n                            value={newPassword}\n                            onChange={onChangeNewPassword}\n                            error={newPasswordError}\n                        />\n                        <TextField\n                            label=\"Повторите новый пароль\"\n                            variant=\"outlined\"\n                            className={classes.input}\n                            value={newPassword2}\n                            onChange={onChangeNewPassword2}\n                            error={newPasswordError}\n                            helperText={newPasswordHelperText}\n                        />\n                        <Button className={classes.buttonW100} variant=\"contained\" onClick={FormSubmit}>\n                            Отправить\n                        </Button>\n                    </form>\n            }\n        </>\n    )\n}\n\n","import React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport {RegisterUser} from \"./components/RegisterUser\"\nimport {Login} from \"./components/Login\"\nimport {Activation} from \"./components/Activation\"\nimport {ResendActivation} from \"./components/ResendActivation\"\nimport {ResetPassword} from \"./components/ResetPassword\"\nimport {ResetPasswordConfirm} from \"./components/ResetPasswordConfirm\"\nimport classes from './Auth.module.css'\n\nexport const Auth = (props) => {\n  return (\n      <div className={classes.container}>\n          <Switch>\n            {/* Регистрация пользователя */}\n            <Route path=\"/ru/auth/users\" exact  component={RegisterUser}/>\n\n            {/* Повторная запрос активации */}\n            <Route path=\"/ru/auth/users/resend_activation\" component={ResendActivation}/>\n\n            {/* Страница подтвержния активации email */}\n            <Route path=\"/ru/auth/users/activation/:uid/:token\" component={Activation}/>\n\n            {/* Авторизация */}\n            <Route path=\"/ru/auth/login\" component={Login}/>\n\n            {/* Сброс пароля */}\n            <Route path=\"/ru/auth/reset_password\" component={ResetPassword}/>\n\n            {/* Сброс пароля подтверждение*/}\n            <Route path=\"/ru/auth/users/password_reset_confirm/:uid/:token\" component={ResetPasswordConfirm}/>\n\n          </Switch>\n      </div>\n  )\n}","import React, {useEffect} from 'react';\n\nexport const Article = () => {\n    const [title, setTitle] = React.useState(\"\")\n    const [content, setContent] = React.useState(\"\")\n\n    if (window.location.pathname === '/') {\n        window.history.replaceState(null,null,'/ru/');\n    }\n\n    useEffect(() => {\n        const uri = window.location.pathname.split('/')\n        const _json = '{\"lang\": \"' + uri[1] + '\", \"slug\": \"/'+ decodeURI(uri[2]) + '\"}'\n\n        console.log(_json)\n\n        fetch(window.protocol + window.backend+'/api/article/', {\n            method: 'POST',\n            body: _json\n        }).then(\n            async response => ({\n                status: response.status,\n                body: await response.text()\n            })\n        ).then(response => {\n            if (response.status === 200) {\n                setTitle(JSON.parse(response.body).title)\n                setContent(JSON.parse(response.body).content)\n            }\n        })\n    }, [])\n\n\n  return (\n    <>\n      <h1>{title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: content }} />\n    </>\n  )\n}","import React, {useEffect} from 'react'\nimport {Button, Grid, makeStyles} from '@material-ui/core'\nimport {Paper} from '@material-ui/core'\nimport {FormControl} from '@material-ui/core'\nimport {RadioGroup} from '@material-ui/core'\nimport {FormControlLabel} from '@material-ui/core'\nimport {Radio} from '@material-ui/core'\nimport {Select} from '@material-ui/core';\nimport {MenuItem} from '@material-ui/core';\nimport {InputLabel} from '@material-ui/core';\nimport {Box} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const StartGame = () => {\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState('yin-yang')\n    const [state, setState] = React.useState({\n        age: '',\n        name: 'hai',\n    });\n\n    const handleChange = (event) => {\n        setValue(event.target.value)\n    }\n\n    const handleChange2 = (event) => {\n        const name = event.target.name;\n        setState({\n            ...state,\n        [name]: event.target.value,\n        });\n    };\n\n    //const commentsSocket = new WebSocket('ws://'+ window.backend + '/game/333/'    );\n    //let ff = JSON.stringify({  'text': 'TEST_TEXT'  })\n    //console.log(ff)\n    //commentsSocket.send(ff);\n\n  return (\n    <>\n    <Grid container spacing={3} style={{\"paddingTop\": \"40px\"}}>\n        <Grid item xs={6} >\n            <Paper style={{\"minHeight\":\"400px\", \"padding\":\"15px\"}}>\n                <p style={{\"textAlign\":\"center\"}}>Создать новую игру</p>\n                <Box display=\"flex\" style={{\"flexDirection\": \"column\"}}>\n                    <FormControl component=\"fieldset\" style={{\"width\":\"100%\"}}>\n                      <RadioGroup aria-label=\"gender\" name=\"chess_variant\" value={value} onChange={handleChange}>\n                        <FormControlLabel value=\"yin-yang\" control={<Radio />} label=\"Инь-ян\" />\n                        <FormControlLabel value=\"simple\" control={<Radio />} label=\"Простые\" />\n                        <FormControlLabel value=\"mixed\" control={<Radio />} label=\"Смешанные\" />\n                        <FormControlLabel value=\"golden-order\" control={<Radio />} label=\"Золотого порядка\" />\n                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Класические\" />\n                        <FormControlLabel value=\"960\" control={<Radio />} label=\"Фишера\" />\n                      </RadioGroup>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" style={{\"margin\":\"15px\"}} className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">Цвет фигур</InputLabel>\n                        <Select native\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            label=\"Цвет фигур\"\n                            // value={pieceColor}\n                                value={state.age}\n                            onChange={handleChange2}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                          <option value=\"random\">Любой</option>\n                          <option value=\"while\">Белые</option>\n                          <option value=\"black\">Черные</option>\n                        </Select>\n                    </FormControl>\n                    <Button variant=\"contained\" style={{\"margin\": \"0 auto\", \"textAlign\":\"center\"}}>Создать</Button>\n                </Box>\n            </Paper>\n        </Grid>\n        <Grid item xs={6} style={{\"textAlign\":\"center\"}}>\n            <Paper style={{\"minHeight\":\"400px\", \"padding\":\"15px\"}}>\n                <p>Присоединится к игре</p>\n                <div style={{\"margin\": \"10px 0\", \"padding\":\"10px 0\",\"border\":\"1px solid\"}}>\n                    Шахматный вариант_ белыми __ с игроком\n                </div>\n                <div style={{\"margin\": \"10px 0\", \"padding\":\"10px 0\", \"border\":\"1px solid\"}}>\n                    Шахматный вариант_ черными __ с игроком\n                </div>\n            </Paper>\n        </Grid>\n    </Grid>\n    </>\n  )\n}","import React, {useState} from \"react\";\nimport {NavMenu} from \"./components/Navbar\";\nimport {Container} from \"@material-ui/core\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport {Auth} from \"./components/Auth/Auth\";\nimport {Article} from \"./components/Article/Article\";\nimport {StartGame} from \"./components/StartGame/StartGame\";\nimport {StylesProvider} from \"@material-ui/core/styles\";\n\nexport const Logined = React.createContext()\n\nif (window.location.host===\"buddhachess.org\"){\n    window.backend = window.frontend = \"buddhachess.org\"\n    window.protocol = \"https://\"\n}else{\n    window.backend = \"localhost:8000\"\n    window.frontend = \"localhost:3000\"\n    window.protocol = \"http://\"\n}\n\nexport const App = () => {\n    const [isLogined, setIsLogined] = useState(false)\n    return(\n      <StylesProvider injectFirst>\n        <base href={window.protocol + window.frontend} />\n        <BrowserRouter>\n          <Logined.Provider value={isLogined}>\n            <NavMenu />\n            <Container>\n              <Switch>\n                  <Route path=\"/ru/auth\" component={Auth}/>\n                  <Route path=\"/ru/играть\" component={StartGame}/>\n                  <Route path=\"/\" component={Article}/>\n              </Switch>\n            </Container>\n          </Logined.Provider>\n        </BrowserRouter>\n      </StylesProvider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App.jsx';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}